{"message":"mismatched closing delimiter: `}`","code":null,"level":"error","spans":[{"file_name":"src/eval.rs","byte_start":21724,"byte_end":21725,"line_start":556,"line_end":556,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        }).collect::<Result<Vec<String>, String>>()?.join(\"\\n\")), location: loc }),","highlight_start":9,"highlight_end":10}],"label":"mismatched closing delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/eval.rs","byte_start":21529,"byte_end":21530,"line_start":553,"line_end":553,"column_start":102,"column_end":103,"is_primary":false,"text":[{"text":"        ASTVal::Array(vs) => Ok(AST { variant: ASTVal::String(vs.into_iter().map(|e| match e.variant {","highlight_start":102,"highlight_end":103}],"label":"closing delimiter possibly meant for this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/eval.rs","byte_start":21657,"byte_end":21658,"line_start":554,"line_end":554,"column_start":127,"column_end":128,"is_primary":true,"text":[{"text":"          ASTVal::Array(vs2) => vs2.into_iter().map(|e| ast_stringify(e, s, loc)).collect::<Result<Vec<String>, String>>().map(|x| x.join(\"\\t\"),","highlight_start":127,"highlight_end":128}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: mismatched closing delimiter: `}`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/eval.rs:554:127\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m553\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ASTVal::Array(vs) => Ok(AST { variant: ASTVal::String(vs.into_iter().map(|e| match e.variant {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mclosing delimiter possibly meant for this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m554\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m          ASTVal::Array(vs2) => vs2.into_iter().map(|e| ast_stringify(e, s, loc)).collect::<Result<Vec<String>, String>>().map(|x| x.join\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munclosed delimiter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m555\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m          _ => ast_stringify(e, s, loc)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m556\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }).collect::<Result<Vec<String>, String>>()?.join(\"\\n\")), location: loc }),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmismatched closing delimiter\u001b[0m\n\n"}
{"message":"expected one of `)`, `,`, `.`, `?`, or an operator, found `=>`","code":null,"level":"error","spans":[{"file_name":"src/eval.rs","byte_start":21657,"byte_end":21658,"line_start":554,"line_end":554,"column_start":127,"column_end":128,"is_primary":true,"text":[{"text":"          ASTVal::Array(vs2) => vs2.into_iter().map(|e| ast_stringify(e, s, loc)).collect::<Result<Vec<String>, String>>().map(|x| x.join(\"\\t\"),","highlight_start":127,"highlight_end":128}],"label":"unclosed delimiter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/eval.rs","byte_start":21688,"byte_end":21690,"line_start":555,"line_end":555,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"          _ => ast_stringify(e, s, loc)","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`)` may belong here","code":null,"level":"help","spans":[{"file_name":"src/eval.rs","byte_start":21687,"byte_end":21687,"line_start":555,"line_end":555,"column_start":12,"column_end":12,"is_primary":true,"text":[{"text":"          _ => ast_stringify(e, s, loc)","highlight_start":12,"highlight_end":12}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `)`, `,`, `.`, `?`, or an operator, found `=>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/eval.rs:554:127\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m554\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m      ASTVal::Array(vs2) => vs2.into_iter().map(|e| ast_stringify(e, s, loc)).collect::<Result<Vec<String>, String>>().map(|x| x.join(\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munclosed delimiter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m555\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m      _ => ast_stringify(e, s, loc)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: `)` may belong here\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors\u001b[0m\n\n"}
